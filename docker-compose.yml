services:

  web:
    image: ghcr.io/l4rm4nd/damn-vulnerable-restaurant-api-game:0.1.x
    container_name: dvra
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8091 --workers 1 --reload"
    ports:
      - 8091:8091
    expose:
      - 8091
    depends_on:
      dvra-db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-OnlyChefsCanAccessDatabases}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-restaurant}
    networks:
      - proxy
      - dvra-internal
    #labels:
    #  - traefik.enable=true
    #  - traefik.http.routers.dvra.rule=Host(`dvra.example.com`)
    #  - traefik.http.services.dvra.loadbalancer.server.port=8091
    #  - traefik.docker.network=proxy
    #  # Part for optional traefik middlewares
    #  - traefik.http.routers.dvra.middlewares=authelia@docker 

  db:
    image: postgres:16-alpine
    container_name: dvra-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-OnlyChefsCanAccessDatabases}
      - POSTGRES_DB=${POSTGRES_DB:-restaurant}
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      start_period: 5s
    expose: 
      - 5432
    networks:
      - dvra-internal

networks:
  proxy:
    external: true
  dvra-internal:
    internal: true
